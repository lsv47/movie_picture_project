name: frontend-cd

on:
  workflow_dispatch:
  push:
    branches:
      - main
  


env:
  NODE_VERSION: '16'
  REACT_APP_MOVIE_API_URL: 'http://localhost:5000'
  IMAGE_NAME: mp-frontend
  DOCKERFILE_PATH: ./starter/frontend/Dockerfile
  FRONTEND_DIR: starter/frontend
  KUSTOMIZE_DIR: starter/frontend/k8s


jobs:
  lint:
    name: Lint Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{env.FRONTEND_DIR}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}

      - name: Install Dependencies
        run: npm ci

      - name: Run Linter
        run: npm run lint

  test:
    name: Test Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{env.FRONTEND_DIR}}
    steps:
      - name: Checkout Repository
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: CI=true npm test


build:
  name: Build Frontend Docker Image
  runs-on: ubuntu-latest
  needs: 
    - lint
    - test
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Build Docker Image
      run: |
          docker build \
            --build-arg REACT_APP_MOVIE_API_URL=${{ env.REACT_APP_MOVIE_API_URL }} \
            -t ${{ env.IMAGE_NAME }}:latest \
            ${{ env.FRONTEND_DIR }}
    - name: Push Docker Image to ECR
      run: |
        docker push ${{env.ECR_REPO_URL}}:latest


deploy:
  name: Deploy to Kubernets
  runs-on: ubuntu-latest
  needs: build
  env:
    ECR_REPO_URL: ${{secrets.ECR_REPO_URL}}
    NEW_TAG: latest
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Set Image Tag in Kustomize
        working-directory: ${{ env.KUSTOMIZE_DIR }}
        run: |
          kustomize edit set image frontend=${{ env.ECR_REPO_URL }}:${{ env.NEW_TAG }}

      - name: Deploy Manifests
        working-directory: ${{ env.KUSTOMIZE_DIR }}
        run: |
          kustomize build | kubectl apply -f -

      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/frontend
